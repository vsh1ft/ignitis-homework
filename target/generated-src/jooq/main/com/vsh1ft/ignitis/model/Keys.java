/*
 * This file is generated by jOOQ.
 */
package com.vsh1ft.ignitis.model;


import com.vsh1ft.ignitis.model.tables.Databasechangeloglock;
import com.vsh1ft.ignitis.model.tables.Message;
import com.vsh1ft.ignitis.model.tables.Person;
import com.vsh1ft.ignitis.model.tables.records.DatabasechangeloglockRecord;
import com.vsh1ft.ignitis.model.tables.records.MessageRecord;
import com.vsh1ft.ignitis.model.tables.records.PersonRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * PUBLIC.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("PK_DATABASECHANGELOGLOCK"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<MessageRecord> CONSTRAINT_6 = Internal.createUniqueKey(Message.MESSAGE, DSL.name("CONSTRAINT_6"), new TableField[] { Message.MESSAGE.ID }, true);
    public static final UniqueKey<PersonRecord> CONSTRAINT_8 = Internal.createUniqueKey(Person.PERSON, DSL.name("CONSTRAINT_8"), new TableField[] { Person.PERSON.ID }, true);
    public static final UniqueKey<PersonRecord> CONSTRAINT_8C = Internal.createUniqueKey(Person.PERSON, DSL.name("CONSTRAINT_8C"), new TableField[] { Person.PERSON.NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MessageRecord, PersonRecord> FK_PERSONID = Internal.createForeignKey(Message.MESSAGE, DSL.name("FK_PERSONID"), new TableField[] { Message.MESSAGE.PERSON_ID }, Keys.CONSTRAINT_8, new TableField[] { Person.PERSON.ID }, true);
}
